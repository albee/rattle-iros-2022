<!-- Copyright (c) 2017, United States Government, as represented by the     -->
<!-- Administrator of the National Aeronautics and Space Administration.     -->
<!--                                                                         -->
<!-- All rights reserved.                                                    -->
<!--                                                                         -->
<!-- The Astrobee platform is licensed under the Apache License, Version 2.0 -->
<!-- (the "License"); you may not use this file except in compliance with    -->
<!-- the License. You may obtain a copy of the License at                    -->
<!--                                                                         -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or         -->
<!-- implied. See the License for the specific language governing            -->
<!-- permissions and limitations under the License.                          -->

<launch>
<!--
  Launch options
-->

  <!-- Context options (NB: THESE ARE OVERRIDDEN BY ENVIRONMENT VARIABLES)   -->
  <arg name="robot" default="$(optenv ASTROBEE_ROBOT sim)" />
  <arg name="world" default="$(optenv ASTROBEE_WORLD iss)" />
  <arg name="ns" default="" />                  <!-- Robot namespace prefix  -->
  <arg name="output" default="screen"/>         <!-- Where nodes should log: "log" or "screen"  -->
  <arg name="spurn" default=""/>                <!-- Prevent a specific node -->
  <arg name="nodes" default=""/>                <!-- Launch specific nodes   -->
  <arg name="extra" default=""/>                <!-- Inject additional node  -->
  <arg name="debug" default=""/>                <!-- Debug node group        -->
  <arg name="sim" default="local" />            <!-- SIM IP address          -->
  <arg name="llp" default="local" />            <!-- LLP IP address          -->
  <arg name="mlp" default="local" />            <!-- MLP IP address          -->
  <arg name="rec" default="" />                 <!-- Record local data       -->
  <arg name="dds" default="false" />            <!-- Enable DDS, disabled for sim!              -->
  <arg name="axis" default="y" />               <!-- ISS axis in use -->
  <arg name="gds_test" default="false" />       <!-- GDS testing -->
  <arg name="dmpc_test" default="false" />

  <!-- General options -->
  <arg name="gviz" default="false" />           <!-- Start GNC visualizer    -->
  <arg name="rviz" default="false" />           <!-- Start visualization     -->
  <arg name="sviz" default="false" />           <!-- Start simulation GUI    -->
  <arg name="rqt" default="false" />            <!-- Start user interface    -->
  <arg name="gds" default="false" />            <!-- Enable GDS              -->
  <arg name="agent1" default="Bsharp"/>         <!-- GDS Agent1              -->
  <arg name="agent2" default="Bumble"/>         <!-- GDS Agent2              -->
  <arg name="agent3" default="Honey"/>          <!-- GDS Agent3              -->
  <arg name="vmware" default="false" />          <!-- Enable vmware           -->
  <arg name="speed" default="1" />              <!-- Speed multiplier        -->
  <arg name="sdebug" default="false" />         <!-- Debug simulator         -->
  <arg name="stats" default="false" />          <!-- Message statistics      -->

  <!-- Robots to launch -->
  <arg name="primary" default="true" />          <!-- Insert a primary robot    -->
  <arg name="secondary" default="true" />        <!-- Insert a secondary robot   -->
  <arg name="tertiary" default="true" />         <!-- Insert a tertiary robot    -->

  <!-- ISS start locations -->
  <arg if="$(eval arg('world')=='iss' and arg('axis')=='x' and dmpc_test == false)"
    name="pose_secondary" default="11.0500   -9.6500    4.9000 0.0 0.0 0.0 1.0" />
  <arg if="$(eval arg('world')=='iss' and arg('axis')=='x' and dmpc_test == false)"
    name="pose_primary" default="10.3500   -9.6500    4.9000 0.0 0.0 0.0 1.0" />

  <arg if="$(eval arg('world')=='iss' and arg('axis')=='y' and dmpc_test == false)"
    name="pose_secondary" default="10.7 -8.65 4.9 0.0 0.0 0.0 1.0" />
  <arg if="$(eval arg('world')=='iss' and arg('axis')=='y' and dmpc_test == false)"
    name="pose_primary" default="10.7 -9.65 4.9 0.0 0.0 0.0 1.0" />

  <arg if="$(eval arg('world')=='iss' and arg('axis')=='z' and dmpc_test == false)"
    name="pose_secondary" default="10.9 -9.65 5.15 0.0 0.0 0.0 1.0" />
  <arg if="$(eval arg('world')=='iss' and arg('axis')=='z' and dmpc_test == false)"
    name="pose_primary" default="10.9 -9.65 4.4 0.0 0.7071 0.0 -0.7071" />

  <!-- DMPC starting pose-->
  <arg if="$(eval arg('world')=='iss' and dmpc_test == true)"
    name="pose_primary" default="10.75 -8.5 4.3 0 0 -0.707 0.707" />
  <arg if="$(eval arg('world')=='iss' and dmpc_test == true)"
    name="pose_secondary" default="10.75 -7.5 4.3 0 0 0 1" />

  <!-- Ground start locations, a little offset -->
  <arg if="$(eval arg('world')=='granite' and dmpc_test == false)"
    name="pose_secondary" default="0 -0.5 -0.76 1.0 0.0 0.0 0.0" />
  <arg if="$(eval arg('world')=='granite' and dmpc_test == false)"
    name="pose_primary" default="0.1 0.7 -0.76 0.0 0.0 1.0 0.0" />

  <!-- DMPC ground start locations-->
  <arg if="$(eval arg('world')=='granite' and dmpc_test == true)"
    name="pose_primary" default="0.5 -0.5 -0.76 0 0 -0.707 0.707" />
  <arg if="$(eval arg('world')=='granite' and dmpc_test == true)"
    name="pose_secondary" default="-0.5 -0.5 -0.76 0.707 -0.707 0.0 0.0" />

<!--
  Set variables and start spinning up nodes. Refer to launch file diagram for details.
-->

  <!-- Make sure all environment variables are set for controller -->
  <!-- Override the robot and world environment variables all the time. The -->
  <!-- environment variables are the default if they are set. So in this -->
  <!-- case we are overriding the environment variables with themselves. -->
  <!-- Roslaunch arguments override the environment variable which is what -->
  <!-- this will do. -->
  <env name="ASTROBEE_ROBOT" value="$(arg robot)" />
  <env name="ASTROBEE_WORLD" value="$(arg world)" />
  <env if="$(eval optenv('ASTROBEE_CONFIG_DIR','')=='')"
       name="ASTROBEE_CONFIG_DIR" value="$(find astrobee)/config" />
  <env if="$(eval optenv('ASTROBEE_RESOURCE_DIR','')=='')"
       name="ASTROBEE_RESOURCE_DIR" value="$(find astrobee)/resources" />
  <env if="$(eval optenv('ROSCONSOLE_CONFIG_FILE','')=='')"
       name="ROSCONSOLE_CONFIG_FILE" value="$(find astrobee)/resources/logging.config"/>

  <!-- Set OpenMP num threads for SLAM debugging -->
  <env name="OMP_NUM_THREADS" value="12" />

  <!-- Declare our global logging format -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${node}] -- ${message}"/>

  <!-- Always launch on the local machine -->
  <group>
    <machine name ="local" address="localhost" default="true"/>
    <!-- Start the descriptions (ISS, dock, granite) for visualization purposes -->
    <include file="$(find astrobee)/launch/controller/descriptions.launch">
      <arg name="world" value="$(arg world)"/>
    </include>
    <!-- Start ground controller services -->
    <include if="$(arg stats)" file="$(find astrobee)/launch/controller/stats.launch"/>
    <include if="$(arg gviz)" file="$(find astrobee)/launch/controller/gviz.launch"/>
    <include if="$(arg gds)" file="$(find astrobee)/launch/controller/gds.launch">
      <arg name="world" value="$(arg world)"/>
      <arg name="agent1" value="$(arg agent1)"/>
      <arg name="agent2" value="$(arg agent2)"/>
      <arg name="agent3" value="$(arg agent3)"/>
    </include>
    <include if="$(arg rqt)" file="$(find astrobee)/launch/controller/rqt.launch"/>
    <include if="$(arg rviz)" file="$(find astrobee)/launch/controller/rviz.launch">
      <arg if="$(eval arg('world')=='granite')" name="world" value="$(arg world)"/>
      <arg if="$(eval arg('world')=='iss')" name="world" value="$(arg world)"/>
    </include>
    <!-- Launch a recorder for this robot-->
    <include unless="$(eval arg('rec')=='')"
             file="$(find astrobee)/launch/controller/bagrecord.launch">
      <arg name="bag" value="$(arg rec)"/>
    </include>
  </group>

  <!-- Allow the simulator to be optionally launched remotely-->
  <group>
    <!-- Connect and update environment variables if required -->
    <machine unless="$(eval arg('sim')=='local')" name="sim_server" default="true"
             address="$(arg sim)" user="astrobee" password="astrobee" timeout="10"/>
    <!-- Update the environment variables relating to absolute paths -->
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_CONFIG_DIR" value="/home/astrobee/native/config" />
    <env unless="$(eval arg('sim')=='local')"
         name="ASTROBEE_RESOURCE_DIR" value="home/astrobee/native/resources" />
    <env unless="$(eval arg('sim')=='local')"
         name="ROSCONSOLE_CONFIG_FILE" value="/home/astrobee/native/resources/logging.config"/>
    <env unless="$(eval arg('sim')=='local')"
         name="DISPLAY" value=":0"/>
    <env unless="$(eval arg('sim')=='local')"
         name="ROS_IP" value="$(arg sim)"/>
    <!-- Start the simulator -->
    <include file="$(find astrobee)/launch/controller/sim_start.launch">
      <arg name="world" value="$(arg world)" />
      <arg name="sviz" value="$(arg sviz)" />
      <arg name="vmware" value="$(arg vmware)" />
      <arg name="speed" value="$(arg speed)" />
      <arg name="debug" value="$(arg sdebug)" />
    </include>
  </group>

  <!-- Auto-insert primary at a desired initial location (uses Queen)-->
  <group if="$(eval arg('primary')==true and arg('gds_test')==false)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="queen" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="$(arg pose_primary)" />  <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

  <!-- Auto-insert secondary at a desired initial location (uses Bumble)-->
  <group if="$(eval arg('secondary')==true and arg('gds_test')==false)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="bumble" />            <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="$(arg pose_secondary)" />        <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

 <!-- Auto-insert a hardware namespacing robot TODO: fix RViz bug-->
  <group if="$(eval arg('primary')==true and arg('gds_test')==true)">
    <include file="$(find astrobee)/launch/spawn.launch">
      <arg name="robot" value="$(arg robot)" />      <!-- Type of robot      -->
      <arg name="world" value="$(arg world)" />      <!-- Execution context  -->
      <arg name="ns" value="" />                <!-- Robot namespace    -->
      <arg name="output" value="$(arg output)" />    <!-- Output for logging -->
      <arg name="pose" value="$(arg pose_primary)" />  <!-- Initial robot pose -->
      <arg name="spurn" value="$(arg spurn)" />      <!-- Prevent node       -->
      <arg name="nodes" value="$(arg nodes)" />      <!-- Launch node group  -->
      <arg name="extra" value="$(arg extra)" />      <!-- Inject extra nodes -->
      <arg name="debug" value="$(arg debug)" />      <!-- Debug a node set   -->
      <arg name="sim" value="$(arg sim)" />          <!-- SIM IP address     -->
      <arg name="llp" value="$(arg llp)" />          <!-- LLP IP address     -->
      <arg name="mlp" value="$(arg mlp)" />          <!-- MLP IP address     -->
      <arg name="dds" value="$(arg dds)" />          <!-- Enable DDS         -->
    </include>
  </group>

</launch>
